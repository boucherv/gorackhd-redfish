package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*Power100LineInputVoltageType power 1 0 0 line input voltage type

swagger:model Power.1.0.0_LineInputVoltageType
*/
type Power100LineInputVoltageType string

// for schema
var power100LineInputVoltageTypeEnum []interface{}

func (m Power100LineInputVoltageType) validatePower100LineInputVoltageTypeEnum(path, location string, value Power100LineInputVoltageType) error {
	if power100LineInputVoltageTypeEnum == nil {
		var res []Power100LineInputVoltageType
		if err := json.Unmarshal([]byte(`["Unknown","ACLowLine","ACMidLine","ACHighLine","DCNeg48V","DC480V"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			power100LineInputVoltageTypeEnum = append(power100LineInputVoltageTypeEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, power100LineInputVoltageTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this power 1 0 0 line input voltage type
func (m Power100LineInputVoltageType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePower100LineInputVoltageTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
