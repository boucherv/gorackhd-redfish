package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*ResourceHealth resource health

swagger:model Resource_Health
*/
type ResourceHealth string

// for schema
var resourceHealthEnum []interface{}

func (m ResourceHealth) validateResourceHealthEnum(path, location string, value ResourceHealth) error {
	if resourceHealthEnum == nil {
		var res []ResourceHealth
		if err := json.Unmarshal([]byte(`["OK","Warning","Critical"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			resourceHealthEnum = append(resourceHealthEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, resourceHealthEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this resource health
func (m ResourceHealth) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateResourceHealthEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
