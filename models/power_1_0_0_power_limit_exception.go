package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*Power100PowerLimitException power 1 0 0 power limit exception

swagger:model Power.1.0.0_PowerLimitException
*/
type Power100PowerLimitException string

// for schema
var power100PowerLimitExceptionEnum []interface{}

func (m Power100PowerLimitException) validatePower100PowerLimitExceptionEnum(path, location string, value Power100PowerLimitException) error {
	if power100PowerLimitExceptionEnum == nil {
		var res []Power100PowerLimitException
		if err := json.Unmarshal([]byte(`["NoAction","HardPowerOff","LogEventOnly","Oem"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			power100PowerLimitExceptionEnum = append(power100PowerLimitExceptionEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, power100PowerLimitExceptionEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this power 1 0 0 power limit exception
func (m Power100PowerLimitException) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePower100PowerLimitExceptionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
