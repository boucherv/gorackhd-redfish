package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*ManagerNetworkProtocol100NotifyIPV6Scope manager network protocol 1 0 0 notify ipv6 scope

swagger:model ManagerNetworkProtocol.1.0.0_NotifyIPv6Scope
*/
type ManagerNetworkProtocol100NotifyIPV6Scope string

// for schema
var managerNetworkProtocol100NotifyIpv6ScopeEnum []interface{}

func (m ManagerNetworkProtocol100NotifyIPV6Scope) validateManagerNetworkProtocol100NotifyIPV6ScopeEnum(path, location string, value ManagerNetworkProtocol100NotifyIPV6Scope) error {
	if managerNetworkProtocol100NotifyIpv6ScopeEnum == nil {
		var res []ManagerNetworkProtocol100NotifyIPV6Scope
		if err := json.Unmarshal([]byte(`["Link","Site","Organization"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			managerNetworkProtocol100NotifyIpv6ScopeEnum = append(managerNetworkProtocol100NotifyIpv6ScopeEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, managerNetworkProtocol100NotifyIpv6ScopeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this manager network protocol 1 0 0 notify ipv6 scope
func (m ManagerNetworkProtocol100NotifyIPV6Scope) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateManagerNetworkProtocol100NotifyIPV6ScopeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
