package redfish_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/emccode/gorackhd-redfish/models"
)

// GetManagersIdentifierReader is a Reader for the GetManagersIdentifier structure.
type GetManagersIdentifierReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetManagersIdentifierReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetManagersIdentifierOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetManagersIdentifierBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetManagersIdentifierUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetManagersIdentifierForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetManagersIdentifierNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetManagersIdentifierInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, client.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetManagersIdentifierOK creates a GetManagersIdentifierOK with default headers values
func NewGetManagersIdentifierOK() *GetManagersIdentifierOK {
	return &GetManagersIdentifierOK{}
}

/*GetManagersIdentifierOK handles this case with default header values.

Success
*/
type GetManagersIdentifierOK struct {
	Payload *models.Manager100Manager
}

func (o *GetManagersIdentifierOK) Error() string {
	return fmt.Sprintf("[GET /Managers/{identifier}][%d] getManagersIdentifierOK  %+v", 200, o.Payload)
}

func (o *GetManagersIdentifierOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Manager100Manager)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetManagersIdentifierBadRequest creates a GetManagersIdentifierBadRequest with default headers values
func NewGetManagersIdentifierBadRequest() *GetManagersIdentifierBadRequest {
	return &GetManagersIdentifierBadRequest{}
}

/*GetManagersIdentifierBadRequest handles this case with default header values.

The request could not be processed because it contains missing or invalid information  (such as validation error on an input field, a missing required value, and so on).  An extended error shall be returned in the response body, as defined in section Extended  Error Handling.

*/
type GetManagersIdentifierBadRequest struct {
}

func (o *GetManagersIdentifierBadRequest) Error() string {
	return fmt.Sprintf("[GET /Managers/{identifier}][%d] getManagersIdentifierBadRequest ", 400)
}

func (o *GetManagersIdentifierBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetManagersIdentifierUnauthorized creates a GetManagersIdentifierUnauthorized with default headers values
func NewGetManagersIdentifierUnauthorized() *GetManagersIdentifierUnauthorized {
	return &GetManagersIdentifierUnauthorized{}
}

/*GetManagersIdentifierUnauthorized handles this case with default header values.

The authentication credentials included with this request are missing or invalid.

*/
type GetManagersIdentifierUnauthorized struct {
}

func (o *GetManagersIdentifierUnauthorized) Error() string {
	return fmt.Sprintf("[GET /Managers/{identifier}][%d] getManagersIdentifierUnauthorized ", 401)
}

func (o *GetManagersIdentifierUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetManagersIdentifierForbidden creates a GetManagersIdentifierForbidden with default headers values
func NewGetManagersIdentifierForbidden() *GetManagersIdentifierForbidden {
	return &GetManagersIdentifierForbidden{}
}

/*GetManagersIdentifierForbidden handles this case with default header values.

The server recognized the credentials in the request, but those credentials do not  possess authorization to perform this request.

*/
type GetManagersIdentifierForbidden struct {
}

func (o *GetManagersIdentifierForbidden) Error() string {
	return fmt.Sprintf("[GET /Managers/{identifier}][%d] getManagersIdentifierForbidden ", 403)
}

func (o *GetManagersIdentifierForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetManagersIdentifierNotFound creates a GetManagersIdentifierNotFound with default headers values
func NewGetManagersIdentifierNotFound() *GetManagersIdentifierNotFound {
	return &GetManagersIdentifierNotFound{}
}

/*GetManagersIdentifierNotFound handles this case with default header values.

The request specified a URI of a resource that does not exist.

*/
type GetManagersIdentifierNotFound struct {
}

func (o *GetManagersIdentifierNotFound) Error() string {
	return fmt.Sprintf("[GET /Managers/{identifier}][%d] getManagersIdentifierNotFound ", 404)
}

func (o *GetManagersIdentifierNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetManagersIdentifierInternalServerError creates a GetManagersIdentifierInternalServerError with default headers values
func NewGetManagersIdentifierInternalServerError() *GetManagersIdentifierInternalServerError {
	return &GetManagersIdentifierInternalServerError{}
}

/*GetManagersIdentifierInternalServerError handles this case with default header values.

Error
*/
type GetManagersIdentifierInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetManagersIdentifierInternalServerError) Error() string {
	return fmt.Sprintf("[GET /Managers/{identifier}][%d] getManagersIdentifierInternalServerError  %+v", 500, o.Payload)
}

func (o *GetManagersIdentifierInternalServerError) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
