package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*LogEntry100SensorType log entry 1 0 0 sensor type

swagger:model LogEntry.1.0.0_SensorType
*/
type LogEntry100SensorType string

// for schema
var logEntry100SensorTypeEnum []interface{}

func (m LogEntry100SensorType) validateLogEntry100SensorTypeEnum(path, location string, value LogEntry100SensorType) error {
	if logEntry100SensorTypeEnum == nil {
		var res []LogEntry100SensorType
		if err := json.Unmarshal([]byte(`["Platform Security Violation Attempt","Temperature","Voltage","Current","Fan","Physical Chassis Security","Processor","Power Supply / Converter","PowerUnit","CoolingDevice","Other Units-based Sensor","Memory","Drive Slot/Bay","POST Memory Resize","System Firmware Progress","Event Logging Disabled","System Event","Critical Interrupt","Button/Switch","Module/Board","Microcontroller/Coprocessor","Add-in Card","Chassis","ChipSet","Other FRU","Cable/Interconnect","Terminator","SystemBoot/Restart","Boot Error","BaseOSBoot/InstallationStatus","OS Stop/Shutdown","Slot/Connector","System ACPI PowerState","Watchdog","Platform Alert","Entity Presence","Monitor ASIC/IC","LAN","Management Subsystem Health","Battery","Session Audit","Version Change","FRUState"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			logEntry100SensorTypeEnum = append(logEntry100SensorTypeEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, logEntry100SensorTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this log entry 1 0 0 sensor type
func (m LogEntry100SensorType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLogEntry100SensorTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
