package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-swagger/go-swagger/strfmt"
	"github.com/go-swagger/go-swagger/swag"

	"github.com/go-swagger/go-swagger/errors"
)

/*Role100Role This schema defines a user role to be used in conjunction with a manager account.

swagger:model Role.1.0.0_Role
*/
type Role100Role struct {

	/* at odata context
	 */
	AtOdataContext Odata400Context `json:"@odata.context,omitempty"`

	/* at odata id
	 */
	AtOdataID Odata400ID `json:"@odata.id,omitempty"`

	/* at odata type
	 */
	AtOdataType Odata400Type `json:"@odata.type,omitempty"`

	/* The redfish privileges that this role includes.
	 */
	AssignedPrivileges []Privileges100PrivilegeType `json:"AssignedPrivileges,omitempty"`

	/* description
	 */
	Description ResourceDescription `json:"Description,omitempty"`

	/* Id
	 */
	ID ResourceID `json:"Id,omitempty"`

	/* This property is used to indicate if the Role is one of the Redfish Predefined Roles vs a Custom role.

	Read Only: true
	*/
	IsPredefined *bool `json:"IsPredefined,omitempty"`

	/* name
	 */
	Name ResourceName `json:"Name,omitempty"`

	/* This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections.
	 */
	Oem ResourceOem `json:"Oem,omitempty"`

	/* The OEM privileges that this role includes.
	 */
	OemPrivileges []string `json:"OemPrivileges,omitempty"`
}

// Validate validates this role 1 0 0 role
func (m *Role100Role) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAssignedPrivileges(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateOemPrivileges(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Role100Role) validateAssignedPrivileges(formats strfmt.Registry) error {

	if swag.IsZero(m.AssignedPrivileges) { // not required
		return nil
	}

	return nil
}

func (m *Role100Role) validateOemPrivileges(formats strfmt.Registry) error {

	if swag.IsZero(m.OemPrivileges) { // not required
		return nil
	}

	return nil
}
