package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*LogEntry100EventSeverity log entry 1 0 0 event severity

swagger:model LogEntry.1.0.0_EventSeverity
*/
type LogEntry100EventSeverity string

// for schema
var logEntry100EventSeverityEnum []interface{}

func (m LogEntry100EventSeverity) validateLogEntry100EventSeverityEnum(path, location string, value LogEntry100EventSeverity) error {
	if logEntry100EventSeverityEnum == nil {
		var res []LogEntry100EventSeverity
		if err := json.Unmarshal([]byte(`["OK","Warning","Critical"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			logEntry100EventSeverityEnum = append(logEntry100EventSeverityEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, logEntry100EventSeverityEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this log entry 1 0 0 event severity
func (m LogEntry100EventSeverity) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLogEntry100EventSeverityEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
