package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*ComputerSystem100BootSourceOverrideEnabled computer system 1 0 0 boot source override enabled

swagger:model ComputerSystem.1.0.0_BootSourceOverrideEnabled
*/
type ComputerSystem100BootSourceOverrideEnabled string

// for schema
var computerSystem100BootSourceOverrideEnabledEnum []interface{}

func (m ComputerSystem100BootSourceOverrideEnabled) validateComputerSystem100BootSourceOverrideEnabledEnum(path, location string, value ComputerSystem100BootSourceOverrideEnabled) error {
	if computerSystem100BootSourceOverrideEnabledEnum == nil {
		var res []ComputerSystem100BootSourceOverrideEnabled
		if err := json.Unmarshal([]byte(`["Disabled","Once","Continuous"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			computerSystem100BootSourceOverrideEnabledEnum = append(computerSystem100BootSourceOverrideEnabledEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, computerSystem100BootSourceOverrideEnabledEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this computer system 1 0 0 boot source override enabled
func (m ComputerSystem100BootSourceOverrideEnabled) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateComputerSystem100BootSourceOverrideEnabledEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
