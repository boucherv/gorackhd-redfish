package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*TaskService100OverWritePolicy task service 1 0 0 over write policy

swagger:model TaskService.1.0.0_OverWritePolicy
*/
type TaskService100OverWritePolicy string

// for schema
var taskService100OverWritePolicyEnum []interface{}

func (m TaskService100OverWritePolicy) validateTaskService100OverWritePolicyEnum(path, location string, value TaskService100OverWritePolicy) error {
	if taskService100OverWritePolicyEnum == nil {
		var res []TaskService100OverWritePolicy
		if err := json.Unmarshal([]byte(`["Manual","Oldest"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			taskService100OverWritePolicyEnum = append(taskService100OverWritePolicyEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, taskService100OverWritePolicyEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this task service 1 0 0 over write policy
func (m TaskService100OverWritePolicy) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTaskService100OverWritePolicyEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
