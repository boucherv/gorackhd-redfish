package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-swagger/go-swagger/strfmt"
	"github.com/go-swagger/go-swagger/swag"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*ServiceRoot100ServiceRoot This object represents the root Redfish service.

swagger:model ServiceRoot.1.0.0_ServiceRoot
*/
type ServiceRoot100ServiceRoot struct {

	/* at odata context
	 */
	AtOdataContext Odata400Context `json:"@odata.context,omitempty"`

	/* at odata id
	 */
	AtOdataID Odata400ID `json:"@odata.id,omitempty"`

	/* at odata type
	 */
	AtOdataType Odata400Type `json:"@odata.type,omitempty"`

	/* This is a link to the Account Service.

	Read Only: true
	*/
	AccountService AccountServiceAccountService `json:"AccountService,omitempty"`

	/* This is a link to a collection of Chassis.

	Read Only: true
	*/
	Chassis *Odata400IDRef `json:"Chassis,omitempty"`

	/* description
	 */
	Description ResourceDescription `json:"Description,omitempty"`

	/* This is a link to the EventService.

	Read Only: true
	*/
	EventService *Odata400IDRef `json:"EventService,omitempty"`

	/* Id
	 */
	ID ResourceID `json:"Id,omitempty"`

	/* This is a link to a collection of Json-Schema files.

	Read Only: true
	*/
	JSONSchemas *Odata400IDRef `json:"JsonSchemas,omitempty"`

	/* links

	Required: true
	*/
	Links *ServiceRoot100ServiceRootLinks `json:"Links"`

	/* This is a link to a collection of Managers.

	Read Only: true
	*/
	Managers *Odata400IDRef `json:"Managers,omitempty"`

	/* name
	 */
	Name ResourceName `json:"Name,omitempty"`

	/* This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections.
	 */
	Oem ResourceOem `json:"Oem,omitempty"`

	/* The version of the Redfish service

	Read Only: true
	Pattern: ^\d+\.\d+\.\d+$
	*/
	RedfishVersion string `json:"RedfishVersion,omitempty"`

	/* This is a link to a collection of Registries.

	Read Only: true
	*/
	Registries *Odata400IDRef `json:"Registries,omitempty"`

	/* This is a link to the Sessions Service.

	Read Only: true
	*/
	SessionService *Odata400IDRef `json:"SessionService,omitempty"`

	/* This is a link to a collection of Systems.

	Read Only: true
	*/
	Systems *Odata400IDRef `json:"Systems,omitempty"`

	/* This is a link to the Task Service.

	Read Only: true
	*/
	Tasks *Odata400IDRef `json:"Tasks,omitempty"`

	/* Unique identifier for a service instance. When SSDP is used, this value should be an exact match of the UUID value returned in a 200OK from an SSDP M-SEARCH request during discovery.

	Read Only: true
	*/
	UUID ResourceUUID `json:"UUID,omitempty"`
}

// Validate validates this service root 1 0 0 service root
func (m *ServiceRoot100ServiceRoot) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRedfishVersion(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateUUID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceRoot100ServiceRoot) validateLinks(formats strfmt.Registry) error {

	if m.Links != nil {

		if err := m.Links.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *ServiceRoot100ServiceRoot) validateRedfishVersion(formats strfmt.Registry) error {

	if swag.IsZero(m.RedfishVersion) { // not required
		return nil
	}

	if err := validate.Pattern("RedfishVersion", "body", string(m.RedfishVersion), `^\d+\.\d+\.\d+$`); err != nil {
		return err
	}

	return nil
}

func (m *ServiceRoot100ServiceRoot) validateUUID(formats strfmt.Registry) error {

	if swag.IsZero(m.UUID) { // not required
		return nil
	}

	if err := m.UUID.Validate(formats); err != nil {
		return err
	}

	return nil
}

/*ServiceRoot100ServiceRootLinks The links object contains the links to other resources that are related to this resource.

swagger:model ServiceRoot100ServiceRootLinks
*/
type ServiceRoot100ServiceRootLinks struct {

	/* Oem extension object.
	 */
	Oem ResourceOem `json:"Oem,omitempty"`

	/* Link to a collection of Sessions

	Read Only: true
	*/
	Sessions *SessionCollectionSessionCollection `json:"Sessions,omitempty"`
}

// Validate validates this service root100 service root links
func (m *ServiceRoot100ServiceRootLinks) Validate(formats strfmt.Registry) error {
	return nil
}
