package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*ResourceResetType resource reset type

swagger:model Resource_ResetType
*/
type ResourceResetType string

// for schema
var resourceResetTypeEnum []interface{}

func (m ResourceResetType) validateResourceResetTypeEnum(path, location string, value ResourceResetType) error {
	if resourceResetTypeEnum == nil {
		var res []ResourceResetType
		if err := json.Unmarshal([]byte(`[true,"ForceOff","GracefulShutdown","GracefulRestart","ForceRestart","Nmi","ForceOn","PushPowerButton"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			resourceResetTypeEnum = append(resourceResetTypeEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, resourceResetTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this resource reset type
func (m ResourceResetType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateResourceResetTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
