package redfish_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/emccode/gorackhd-redfish/models"
)

// GetRegistriesReader is a Reader for the GetRegistries structure.
type GetRegistriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetRegistriesReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetRegistriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetRegistriesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetRegistriesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 501:
		result := NewGetRegistriesNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, client.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRegistriesOK creates a GetRegistriesOK with default headers values
func NewGetRegistriesOK() *GetRegistriesOK {
	return &GetRegistriesOK{}
}

/*GetRegistriesOK handles this case with default header values.

Success
*/
type GetRegistriesOK struct {
	Payload *models.MessageRegistryMessageRegistry
}

func (o *GetRegistriesOK) Error() string {
	return fmt.Sprintf("[GET /Registries][%d] getRegistriesOK  %+v", 200, o.Payload)
}

func (o *GetRegistriesOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MessageRegistryMessageRegistry)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRegistriesUnauthorized creates a GetRegistriesUnauthorized with default headers values
func NewGetRegistriesUnauthorized() *GetRegistriesUnauthorized {
	return &GetRegistriesUnauthorized{}
}

/*GetRegistriesUnauthorized handles this case with default header values.

The authentication credentials included with this request are missing or invalid.

*/
type GetRegistriesUnauthorized struct {
}

func (o *GetRegistriesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /Registries][%d] getRegistriesUnauthorized ", 401)
}

func (o *GetRegistriesUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRegistriesForbidden creates a GetRegistriesForbidden with default headers values
func NewGetRegistriesForbidden() *GetRegistriesForbidden {
	return &GetRegistriesForbidden{}
}

/*GetRegistriesForbidden handles this case with default header values.

The server recognized the credentials in the request, but those credentials do not  possess authorization to perform this request.

*/
type GetRegistriesForbidden struct {
}

func (o *GetRegistriesForbidden) Error() string {
	return fmt.Sprintf("[GET /Registries][%d] getRegistriesForbidden ", 403)
}

func (o *GetRegistriesForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRegistriesNotImplemented creates a GetRegistriesNotImplemented with default headers values
func NewGetRegistriesNotImplemented() *GetRegistriesNotImplemented {
	return &GetRegistriesNotImplemented{}
}

/*GetRegistriesNotImplemented handles this case with default header values.

The server does not (currently) support the functionality required to fulfill the request.  This is the appropriate response when the server does not recognize the request method  and is not capable of supporting the method for any resource.

*/
type GetRegistriesNotImplemented struct {
}

func (o *GetRegistriesNotImplemented) Error() string {
	return fmt.Sprintf("[GET /Registries][%d] getRegistriesNotImplemented ", 501)
}

func (o *GetRegistriesNotImplemented) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}
