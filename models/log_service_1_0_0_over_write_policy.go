package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*LogService100OverWritePolicy log service 1 0 0 over write policy

swagger:model LogService.1.0.0_OverWritePolicy
*/
type LogService100OverWritePolicy string

// for schema
var logService100OverWritePolicyEnum []interface{}

func (m LogService100OverWritePolicy) validateLogService100OverWritePolicyEnum(path, location string, value LogService100OverWritePolicy) error {
	if logService100OverWritePolicyEnum == nil {
		var res []LogService100OverWritePolicy
		if err := json.Unmarshal([]byte(`["Unknown","WrapsWhenFull","NeverOverWrites"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			logService100OverWritePolicyEnum = append(logService100OverWritePolicyEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, logService100OverWritePolicyEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this log service 1 0 0 over write policy
func (m LogService100OverWritePolicy) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLogService100OverWritePolicyEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
