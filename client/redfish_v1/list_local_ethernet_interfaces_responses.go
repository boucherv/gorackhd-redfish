package redfish_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/emccode/gorackhd-redfish/models"
)

// ListLocalEthernetInterfacesReader is a Reader for the ListLocalEthernetInterfaces structure.
type ListLocalEthernetInterfacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *ListLocalEthernetInterfacesReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListLocalEthernetInterfacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListLocalEthernetInterfacesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListLocalEthernetInterfacesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListLocalEthernetInterfacesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListLocalEthernetInterfacesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListLocalEthernetInterfacesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, client.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListLocalEthernetInterfacesOK creates a ListLocalEthernetInterfacesOK with default headers values
func NewListLocalEthernetInterfacesOK() *ListLocalEthernetInterfacesOK {
	return &ListLocalEthernetInterfacesOK{}
}

/*ListLocalEthernetInterfacesOK handles this case with default header values.

Success
*/
type ListLocalEthernetInterfacesOK struct {
	Payload *models.EthernetInterfaceCollectionEthernetInterfaceCollection
}

func (o *ListLocalEthernetInterfacesOK) Error() string {
	return fmt.Sprintf("[GET /Managers/RackHD/EthernetInterfaces][%d] listLocalEthernetInterfacesOK  %+v", 200, o.Payload)
}

func (o *ListLocalEthernetInterfacesOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EthernetInterfaceCollectionEthernetInterfaceCollection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListLocalEthernetInterfacesBadRequest creates a ListLocalEthernetInterfacesBadRequest with default headers values
func NewListLocalEthernetInterfacesBadRequest() *ListLocalEthernetInterfacesBadRequest {
	return &ListLocalEthernetInterfacesBadRequest{}
}

/*ListLocalEthernetInterfacesBadRequest handles this case with default header values.

The request could not be processed because it contains missing or invalid information  (such as validation error on an input field, a missing required value, and so on).  An extended error shall be returned in the response body, as defined in section Extended  Error Handling.

*/
type ListLocalEthernetInterfacesBadRequest struct {
}

func (o *ListLocalEthernetInterfacesBadRequest) Error() string {
	return fmt.Sprintf("[GET /Managers/RackHD/EthernetInterfaces][%d] listLocalEthernetInterfacesBadRequest ", 400)
}

func (o *ListLocalEthernetInterfacesBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListLocalEthernetInterfacesUnauthorized creates a ListLocalEthernetInterfacesUnauthorized with default headers values
func NewListLocalEthernetInterfacesUnauthorized() *ListLocalEthernetInterfacesUnauthorized {
	return &ListLocalEthernetInterfacesUnauthorized{}
}

/*ListLocalEthernetInterfacesUnauthorized handles this case with default header values.

The authentication credentials included with this request are missing or invalid.

*/
type ListLocalEthernetInterfacesUnauthorized struct {
}

func (o *ListLocalEthernetInterfacesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /Managers/RackHD/EthernetInterfaces][%d] listLocalEthernetInterfacesUnauthorized ", 401)
}

func (o *ListLocalEthernetInterfacesUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListLocalEthernetInterfacesForbidden creates a ListLocalEthernetInterfacesForbidden with default headers values
func NewListLocalEthernetInterfacesForbidden() *ListLocalEthernetInterfacesForbidden {
	return &ListLocalEthernetInterfacesForbidden{}
}

/*ListLocalEthernetInterfacesForbidden handles this case with default header values.

The server recognized the credentials in the request, but those credentials do not  possess authorization to perform this request.

*/
type ListLocalEthernetInterfacesForbidden struct {
}

func (o *ListLocalEthernetInterfacesForbidden) Error() string {
	return fmt.Sprintf("[GET /Managers/RackHD/EthernetInterfaces][%d] listLocalEthernetInterfacesForbidden ", 403)
}

func (o *ListLocalEthernetInterfacesForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListLocalEthernetInterfacesNotFound creates a ListLocalEthernetInterfacesNotFound with default headers values
func NewListLocalEthernetInterfacesNotFound() *ListLocalEthernetInterfacesNotFound {
	return &ListLocalEthernetInterfacesNotFound{}
}

/*ListLocalEthernetInterfacesNotFound handles this case with default header values.

The request specified a URI of a resource that does not exist.

*/
type ListLocalEthernetInterfacesNotFound struct {
}

func (o *ListLocalEthernetInterfacesNotFound) Error() string {
	return fmt.Sprintf("[GET /Managers/RackHD/EthernetInterfaces][%d] listLocalEthernetInterfacesNotFound ", 404)
}

func (o *ListLocalEthernetInterfacesNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListLocalEthernetInterfacesInternalServerError creates a ListLocalEthernetInterfacesInternalServerError with default headers values
func NewListLocalEthernetInterfacesInternalServerError() *ListLocalEthernetInterfacesInternalServerError {
	return &ListLocalEthernetInterfacesInternalServerError{}
}

/*ListLocalEthernetInterfacesInternalServerError handles this case with default header values.

Error
*/
type ListLocalEthernetInterfacesInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ListLocalEthernetInterfacesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /Managers/RackHD/EthernetInterfaces][%d] listLocalEthernetInterfacesInternalServerError  %+v", 500, o.Payload)
}

func (o *ListLocalEthernetInterfacesInternalServerError) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
