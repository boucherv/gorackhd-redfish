package redfish_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/emccode/gorackhd-redfish/models"
)

// GetRolesIdentifierReader is a Reader for the GetRolesIdentifier structure.
type GetRolesIdentifierReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetRolesIdentifierReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetRolesIdentifierOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetRolesIdentifierBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetRolesIdentifierUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetRolesIdentifierForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetRolesIdentifierNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetRolesIdentifierInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, client.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRolesIdentifierOK creates a GetRolesIdentifierOK with default headers values
func NewGetRolesIdentifierOK() *GetRolesIdentifierOK {
	return &GetRolesIdentifierOK{}
}

/*GetRolesIdentifierOK handles this case with default header values.

Success
*/
type GetRolesIdentifierOK struct {
	Payload *models.Role100Role
}

func (o *GetRolesIdentifierOK) Error() string {
	return fmt.Sprintf("[GET /Roles/{identifier}][%d] getRolesIdentifierOK  %+v", 200, o.Payload)
}

func (o *GetRolesIdentifierOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Role100Role)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRolesIdentifierBadRequest creates a GetRolesIdentifierBadRequest with default headers values
func NewGetRolesIdentifierBadRequest() *GetRolesIdentifierBadRequest {
	return &GetRolesIdentifierBadRequest{}
}

/*GetRolesIdentifierBadRequest handles this case with default header values.

The request could not be processed because it contains missing or invalid information  (such as validation error on an input field, a missing required value, and so on).  An extended error shall be returned in the response body, as defined in section Extended  Error Handling.

*/
type GetRolesIdentifierBadRequest struct {
}

func (o *GetRolesIdentifierBadRequest) Error() string {
	return fmt.Sprintf("[GET /Roles/{identifier}][%d] getRolesIdentifierBadRequest ", 400)
}

func (o *GetRolesIdentifierBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRolesIdentifierUnauthorized creates a GetRolesIdentifierUnauthorized with default headers values
func NewGetRolesIdentifierUnauthorized() *GetRolesIdentifierUnauthorized {
	return &GetRolesIdentifierUnauthorized{}
}

/*GetRolesIdentifierUnauthorized handles this case with default header values.

The authentication credentials included with this request are missing or invalid.

*/
type GetRolesIdentifierUnauthorized struct {
}

func (o *GetRolesIdentifierUnauthorized) Error() string {
	return fmt.Sprintf("[GET /Roles/{identifier}][%d] getRolesIdentifierUnauthorized ", 401)
}

func (o *GetRolesIdentifierUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRolesIdentifierForbidden creates a GetRolesIdentifierForbidden with default headers values
func NewGetRolesIdentifierForbidden() *GetRolesIdentifierForbidden {
	return &GetRolesIdentifierForbidden{}
}

/*GetRolesIdentifierForbidden handles this case with default header values.

The server recognized the credentials in the request, but those credentials do not  possess authorization to perform this request.

*/
type GetRolesIdentifierForbidden struct {
}

func (o *GetRolesIdentifierForbidden) Error() string {
	return fmt.Sprintf("[GET /Roles/{identifier}][%d] getRolesIdentifierForbidden ", 403)
}

func (o *GetRolesIdentifierForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRolesIdentifierNotFound creates a GetRolesIdentifierNotFound with default headers values
func NewGetRolesIdentifierNotFound() *GetRolesIdentifierNotFound {
	return &GetRolesIdentifierNotFound{}
}

/*GetRolesIdentifierNotFound handles this case with default header values.

The request specified a URI of a resource that does not exist.

*/
type GetRolesIdentifierNotFound struct {
}

func (o *GetRolesIdentifierNotFound) Error() string {
	return fmt.Sprintf("[GET /Roles/{identifier}][%d] getRolesIdentifierNotFound ", 404)
}

func (o *GetRolesIdentifierNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRolesIdentifierInternalServerError creates a GetRolesIdentifierInternalServerError with default headers values
func NewGetRolesIdentifierInternalServerError() *GetRolesIdentifierInternalServerError {
	return &GetRolesIdentifierInternalServerError{}
}

/*GetRolesIdentifierInternalServerError handles this case with default header values.

Error
*/
type GetRolesIdentifierInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetRolesIdentifierInternalServerError) Error() string {
	return fmt.Sprintf("[GET /Roles/{identifier}][%d] getRolesIdentifierInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRolesIdentifierInternalServerError) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
