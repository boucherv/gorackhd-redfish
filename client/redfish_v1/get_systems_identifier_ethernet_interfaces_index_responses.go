package redfish_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/emccode/gorackhd-redfish/models"
)

// GetSystemsIdentifierEthernetInterfacesIndexReader is a Reader for the GetSystemsIdentifierEthernetInterfacesIndex structure.
type GetSystemsIdentifierEthernetInterfacesIndexReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetSystemsIdentifierEthernetInterfacesIndexReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSystemsIdentifierEthernetInterfacesIndexOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSystemsIdentifierEthernetInterfacesIndexBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetSystemsIdentifierEthernetInterfacesIndexUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSystemsIdentifierEthernetInterfacesIndexForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSystemsIdentifierEthernetInterfacesIndexNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetSystemsIdentifierEthernetInterfacesIndexInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, client.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSystemsIdentifierEthernetInterfacesIndexOK creates a GetSystemsIdentifierEthernetInterfacesIndexOK with default headers values
func NewGetSystemsIdentifierEthernetInterfacesIndexOK() *GetSystemsIdentifierEthernetInterfacesIndexOK {
	return &GetSystemsIdentifierEthernetInterfacesIndexOK{}
}

/*GetSystemsIdentifierEthernetInterfacesIndexOK handles this case with default header values.

Success
*/
type GetSystemsIdentifierEthernetInterfacesIndexOK struct {
	Payload *models.EthernetInterface100EthernetInterface
}

func (o *GetSystemsIdentifierEthernetInterfacesIndexOK) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/EthernetInterfaces/{index}][%d] getSystemsIdentifierEthernetInterfacesIndexOK  %+v", 200, o.Payload)
}

func (o *GetSystemsIdentifierEthernetInterfacesIndexOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EthernetInterface100EthernetInterface)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSystemsIdentifierEthernetInterfacesIndexBadRequest creates a GetSystemsIdentifierEthernetInterfacesIndexBadRequest with default headers values
func NewGetSystemsIdentifierEthernetInterfacesIndexBadRequest() *GetSystemsIdentifierEthernetInterfacesIndexBadRequest {
	return &GetSystemsIdentifierEthernetInterfacesIndexBadRequest{}
}

/*GetSystemsIdentifierEthernetInterfacesIndexBadRequest handles this case with default header values.

The request could not be processed because it contains missing or invalid information  (such as validation error on an input field, a missing required value, and so on).  An extended error shall be returned in the response body, as defined in section Extended  Error Handling.

*/
type GetSystemsIdentifierEthernetInterfacesIndexBadRequest struct {
}

func (o *GetSystemsIdentifierEthernetInterfacesIndexBadRequest) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/EthernetInterfaces/{index}][%d] getSystemsIdentifierEthernetInterfacesIndexBadRequest ", 400)
}

func (o *GetSystemsIdentifierEthernetInterfacesIndexBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSystemsIdentifierEthernetInterfacesIndexUnauthorized creates a GetSystemsIdentifierEthernetInterfacesIndexUnauthorized with default headers values
func NewGetSystemsIdentifierEthernetInterfacesIndexUnauthorized() *GetSystemsIdentifierEthernetInterfacesIndexUnauthorized {
	return &GetSystemsIdentifierEthernetInterfacesIndexUnauthorized{}
}

/*GetSystemsIdentifierEthernetInterfacesIndexUnauthorized handles this case with default header values.

The authentication credentials included with this request are missing or invalid.

*/
type GetSystemsIdentifierEthernetInterfacesIndexUnauthorized struct {
}

func (o *GetSystemsIdentifierEthernetInterfacesIndexUnauthorized) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/EthernetInterfaces/{index}][%d] getSystemsIdentifierEthernetInterfacesIndexUnauthorized ", 401)
}

func (o *GetSystemsIdentifierEthernetInterfacesIndexUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSystemsIdentifierEthernetInterfacesIndexForbidden creates a GetSystemsIdentifierEthernetInterfacesIndexForbidden with default headers values
func NewGetSystemsIdentifierEthernetInterfacesIndexForbidden() *GetSystemsIdentifierEthernetInterfacesIndexForbidden {
	return &GetSystemsIdentifierEthernetInterfacesIndexForbidden{}
}

/*GetSystemsIdentifierEthernetInterfacesIndexForbidden handles this case with default header values.

The server recognized the credentials in the request, but those credentials do not  possess authorization to perform this request.

*/
type GetSystemsIdentifierEthernetInterfacesIndexForbidden struct {
}

func (o *GetSystemsIdentifierEthernetInterfacesIndexForbidden) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/EthernetInterfaces/{index}][%d] getSystemsIdentifierEthernetInterfacesIndexForbidden ", 403)
}

func (o *GetSystemsIdentifierEthernetInterfacesIndexForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSystemsIdentifierEthernetInterfacesIndexNotFound creates a GetSystemsIdentifierEthernetInterfacesIndexNotFound with default headers values
func NewGetSystemsIdentifierEthernetInterfacesIndexNotFound() *GetSystemsIdentifierEthernetInterfacesIndexNotFound {
	return &GetSystemsIdentifierEthernetInterfacesIndexNotFound{}
}

/*GetSystemsIdentifierEthernetInterfacesIndexNotFound handles this case with default header values.

The request specified a URI of a resource that does not exist.

*/
type GetSystemsIdentifierEthernetInterfacesIndexNotFound struct {
}

func (o *GetSystemsIdentifierEthernetInterfacesIndexNotFound) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/EthernetInterfaces/{index}][%d] getSystemsIdentifierEthernetInterfacesIndexNotFound ", 404)
}

func (o *GetSystemsIdentifierEthernetInterfacesIndexNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSystemsIdentifierEthernetInterfacesIndexInternalServerError creates a GetSystemsIdentifierEthernetInterfacesIndexInternalServerError with default headers values
func NewGetSystemsIdentifierEthernetInterfacesIndexInternalServerError() *GetSystemsIdentifierEthernetInterfacesIndexInternalServerError {
	return &GetSystemsIdentifierEthernetInterfacesIndexInternalServerError{}
}

/*GetSystemsIdentifierEthernetInterfacesIndexInternalServerError handles this case with default header values.

Error
*/
type GetSystemsIdentifierEthernetInterfacesIndexInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetSystemsIdentifierEthernetInterfacesIndexInternalServerError) Error() string {
	return fmt.Sprintf("[GET /Systems/{identifier}/EthernetInterfaces/{index}][%d] getSystemsIdentifierEthernetInterfacesIndexInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSystemsIdentifierEthernetInterfacesIndexInternalServerError) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
